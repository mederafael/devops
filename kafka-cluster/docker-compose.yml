# docker-compose.yml
version: '3.8'
services:
  zookeeper1:
    build:
      context: ./zookeeper
      dockerfile: Dockerfile
    hostname: ${ZOOKEEPER_HOST_1}
    container_name: zookeeper1
    ports:
      - ${ZOOKEEPER_PORT_1}:2181
    networks:
      kafka_network:
        ipv4_address: ${ZOOKEEPER_IP_1}
    environment:
      - ZOO_MY_ID=1
      - ZOO_CLIENT_PORT=${ZOOKEEPER_PORT_1}
      - ZOO_SERVER1=server.1=${ZOOKEEPER_HOST_1}:2888:3888
      - ZOO_SERVER2=server.2=${ZOOKEEPER_HOST_2}:2888:3888
      - ZOO_SERVER3=server.3=${ZOOKEEPER_HOST_3}:2888:3888
    volumes:
      - zookeeper1_data:/var/lib/zookeeper
      - zookeeper1_datalog:/datalog
    healthcheck:
      test: ["CMD", "nc", "-z", "${ZOOKEEPER_HOST_1}", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3
    extra_hosts:
      - "${ZOOKEEPER_HOST_2}:${ZOOKEEPER_IP_2}"
      - "${ZOOKEEPER_HOST_3}:${ZOOKEEPER_IP_3}"

  zookeeper2:
    build:
      context: ./zookeeper
      dockerfile: Dockerfile
    hostname: ${ZOOKEEPER_HOST_2}
    container_name: zookeeper2
    ports:
      - ${ZOOKEEPER_PORT_2}:2181
    networks:
      kafka_network:
        ipv4_address: ${ZOOKEEPER_IP_2}
    environment:
      - ZOO_MY_ID=2
      - ZOO_CLIENT_PORT=${ZOOKEEPER_PORT_2}
      - ZOO_SERVER1=server.1=${ZOOKEEPER_HOST_1}:2888:3888
      - ZOO_SERVER2=server.2=${ZOOKEEPER_HOST_2}:2888:3888
      - ZOO_SERVER3=server.3=${ZOOKEEPER_HOST_3}:2888:3888
    volumes:
      - zookeeper2_data:/var/lib/zookeeper
      - zookeeper2_datalog:/datalog
    healthcheck:
      test: ["CMD", "nc", "-z", "${ZOOKEEPER_HOST_2}", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3
    extra_hosts:
      - "${ZOOKEEPER_HOST_1}:${ZOOKEEPER_IP_1}"
      - "${ZOOKEEPER_HOST_3}:${ZOOKEEPER_IP_3}"

  zookeeper3:
    build:
      context: ./zookeeper
      dockerfile: Dockerfile
    hostname: ${ZOOKEEPER_HOST_3}
    container_name: zookeeper3
    ports:
      - ${ZOOKEEPER_PORT_3}:2181
    networks:
      kafka_network:
        ipv4_address: ${ZOOKEEPER_IP_3}
    environment:
      - ZOO_MY_ID=3
      - ZOO_CLIENT_PORT=${ZOOKEEPER_PORT_3}
      - ZOO_SERVER1=server.1=${ZOOKEEPER_HOST_1}:2888:3888
      - ZOO_SERVER2=server.2=${ZOOKEEPER_HOST_2}:2888:3888
      - ZOO_SERVER3=server.3=${ZOOKEEPER_HOST_3}:2888:3888
    volumes:
      - zookeeper3_data:/var/lib/zookeeper
      - zookeeper3_datalog:/datalog
    healthcheck:
      test: ["CMD", "nc", "-z", "${ZOOKEEPER_HOST_3}", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3
    extra_hosts:
      - "${ZOOKEEPER_HOST_1}:${ZOOKEEPER_IP_1}"
      - "${ZOOKEEPER_HOST_2}:${ZOOKEEPER_IP_2}"

networks:
  kafka_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16

volumes:
  zookeeper1_data: {}
  zookeeper1_datalog: {}
  zookeeper2_data: {}
  zookeeper2_datalog: {}
  zookeeper3_data: {}
  zookeeper3_datalog: {}

